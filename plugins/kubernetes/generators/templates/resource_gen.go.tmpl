package {{.PackageName}}

import (
	"github.com/joshuapare/kubede/backend/services"
	"github.com/joshuapare/kubede/backend/services/resources"
	"go.uber.org/zap"

	k8sapi "k8s.io/api/{{.ImportPath}}"
)

// {{.ResourceName}}Service is a service for managing {{.ResourceName}} resources.
// {{.Description}}
type {{.ResourceName}}Service struct {
	resources.NamespacedResourceService[*k8sapi.{{.ResourceName}}]
}

// New{{.ResourceName}}Service creates a new instance of {{.ResourceName}}Service.
func New{{.ResourceName}}Service(
	logger *zap.SugaredLogger,
	publisher *services.ClusterContextPublisher,
	stateChan chan<- services.ResourceStateEvent,
) *{{.ResourceName}}Service {
	return &{{.ResourceName}}Service{
		NamespacedResourceService: *resources.NewNamespacedResourceService[*k8sapi.{{.ResourceName}}](
			logger,
			k8sapi.SchemeGroupVersion.WithResource("{{.SGVRName}}"),
			publisher,
			stateChan,
		),
	}
}
